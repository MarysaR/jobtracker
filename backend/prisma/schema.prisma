// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  avatarUrl String?  @map("avatar_url")
  
  // Auth Google (optionnel)
  googleId  String?  @unique @map("google_id")
  
  // Auth classique (optionnel)  
  password  String?  // Hash bcrypt
  
  // Reset password
  resetToken       String?   @map("reset_token")
  resetTokenExpiry DateTime? @map("reset_token_expiry")
  emailVerified    Boolean   @default(false) @map("email_verified")
  
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // Relations
  applications Application[]

  @@map("users")
}

model Application {
  id                 String    @id @default(cuid())
  entreprise         String
  poste              String
  emailEntreprise    String?    @map("email_entreprise")
  contacts           String?
  dateCandidature    DateTime  @map("date_candidature")
  statut             String    @default("Postul√©")
  sourceReseau       String    @map("source_reseau")
  lettreMotivation   String?   @map("lettre_motivation") @db.Text
  notes              String?   @db.Text
  cvFilePath         String?   @map("cv_file_path")
  lettreFilePath     String?   @map("lettre_file_path")
  linkedinUrl        String?   @map("linkedin_url")
  siteWeb            String?   @map("site_web")
  rappelDate         DateTime? @map("rappel_date")
  rappelFait         Boolean   @default(false) @map("rappel_fait")
  createdAt          DateTime  @default(now()) @map("created_at")
  updatedAt          DateTime  @updatedAt @map("updated_at")

  // Relations
  userId String? @map("user_id")  // Ajouter le ?
  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("applications")
}